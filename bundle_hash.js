const { ethers, Wallet, providers } = require('ethers');
const { FlashbotsBundleProvider } = require('@flashbots/ethers-provider-bundle');

const ETHEREUM_RPC_URL = 'https://virtual.mainnet.rpc.tenderly.co/c4e60e60-6398-4e23-9ffc-f48f66d9706e';
const FLASHBOTS_RELAY_URL = 'https://relay.flashbots.net';
const PRIVATE_KEY = '03680460bd83d52a2be9932b4b1e1f2251d6d56481eaa23e5f364194ca04fbf3';

const provider = new providers.JsonRpcProvider(ETHEREUM_RPC_URL);
const wallet = new Wallet(PRIVATE_KEY, provider);

async function main() {
    const flashbotsProvider = await FlashbotsBundleProvider.create(provider, wallet, FLASHBOTS_RELAY_URL);

    async function validateBundle() {
        const blockNumber = await provider.getBlockNumber();
        const signedTransactions = [
            '0xf9016d826a3f852e90edd0008307a1209416e3b07f69fc42ef99bcfb1ce9ca15bea61e2f9780b90104414bf389000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000007c8a76610723e8fd5fc955f0605faff8ec5da716000000000000000000000000000000000000000000000000000000006673f7f10000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ba0b3a15143777cc488523b21e9332eccbd0c3bd649f685a2ee99da3ae05d47d4d5a06d78ed35ceefd34d68d9d4196fc6e0cd282e77af94438edff0298e1fdc931165',
            '0xf9016d826a40852e90edd0008307a1209416e3b07f69fc42ef99bcfb1ce9ca15bea61e2f9780b90104414bf389000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000007c8a76610723e8fd5fc955f0605faff8ec5da716000000000000000000000000000000000000000000000000000000006673f7f1000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ca0a876c7d7c38f54e4d9acf51b3a35631d1fe1445565e965cc59c20008aecda3fca04978a9b2cd2eb7494c0865a9a8b6557c194970cf6c13ad44fcbeadc1782b84d6',
            '0xf9016d826a41852e90edd0008307a1209416e3b07f69fc42ef99bcfb1ce9ca15bea61e2f9780b90104414bf3890000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000007c8a76610723e8fd5fc955f0605faff8ec5da716000000000000000000000000000000000000000000000000000000006673f7f100000000000000000000000000000000000000000000003635c9adc5dea00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ca0631094cc02fec5576f3dab1bed6f700b43f6280fd500d013deaffc37877f66ffa076efed0ec1969718d859311d8e758935aa7c28c00d794c388966960f515c7bec'
        ];

        const simulation = await flashbotsProvider.simulate(signedTransactions, blockNumber + 1);
        console.log('Simulation Result:', simulation);

        if ('error' in simulation) {
            console.error('Simulation Error:', simulation.error.message);
        } else {
            console.log('Simulation Success:', simulation);
        }
    }

    await validateBundle();
}

main().catch(console.error);
